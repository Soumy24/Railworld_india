 Mehtod Overloading

 If a class has multiple methods having same name but different in parameters, it is known as
 Method Overloading.

    If we have to perform only one operation, having same name of the methods increases the readability of the 
program.

                                  Advantage of method overloading

Method overloading increases the readability of the program.

    Different ways to overload the method

There are two ways to overload the method in java

1) By changing number of arguments
2) By changing the data type

                       Method Overloading: changing no. of arguments

In this example, we have created two methods, first add() method performs addition of two numbers and second
add method performs addition of three numbers.

class Adder
{  
static int add(int a,int b){return a+b;
}  
static int add(int a,int b,int c)
{
return a+b+c;
}  
} 
 
class TestOverloading1
{  
public static void main(String[] args)
{  

System.out.println(Adder.add(11,11)); 
 
System.out.println(Adder.add(11,11,11));  
}
}  

                            Method Overloading: changing data type of arguments

In this example, we have created two methods that differs in data type. The first add method receives two
integer arguments and second add method receives two double arguments.

Example:-

class Add
{  
static int add(int a, int b)
{
return a+b;
}  
static double add(double a, double b)
{
return a+b;
}  
}  
class TestOverloading2
{  
public static void main(String[] args)
{  
System.out.println(Adder.add(11,11));  

System.out.println(Adder.add(12.3,12.6));  
}
}  

Example:-

public class OverloadingExample {

    // Method with the same name but different parameters (method overloading)

    public static int add(int a, int b)
 {
        return a + b;
    }

    public static double add(double a, double b)
 {
        return a + b;
    }

    public static void main(String[] args) 
{
        int sum1 = add(5, 10);
        double sum2 = add(3.5, 2.5);

        System.out.println("Sum of integers: " + sum1);

        System.out.println("Sum of doubles: " + sum2);
    }
}


                       ------------------------------------------------------